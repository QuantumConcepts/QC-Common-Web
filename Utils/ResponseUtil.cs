using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using QuantumConcepts.Common.Extensions;
using System.IO;

namespace QuantumConcepts.Common.Web.Utils
{
    public static class ResponseUtil
    {
        private static readonly Dictionary<string, MimeType> MimeTypes = null;
        private static readonly MimeType DefaultMimeType = null;

        static ResponseUtil()
        {
            //Create the mime types.
            ResponseUtil.MimeTypes = (new[]
            {
                new MimeType(string.Empty, "application/octet-stream"),
                new MimeType("3dm", "x-world/x-3dmf"),
                new MimeType("3dmf", "x-world/x-3dmf"),
                new MimeType("a", "application/octet-stream"),
                new MimeType("aab", "application/x-authorware-bin"),
                new MimeType("aam", "application/x-authorware-map"),
                new MimeType("aas", "application/x-authorware-seg"),
                new MimeType("abc", "text/vnd.abc"),
                new MimeType("acgi", "text/html"),
                new MimeType("afl", "video/animaflex"),
                new MimeType("ai", "application/postscript"),
                new MimeType("aif", "audio/aiff"),
                new MimeType("aifc", "audio/aiff"),
                new MimeType("aiff", "audio/aiff"),
                new MimeType("aim", "application/x-aim"),
                new MimeType("aip", "text/x-audiosoft-intra"),
                new MimeType("ani", "application/x-navi-animation"),
                new MimeType("aos", "application/x-nokia-9000-communicator-add-on-software"),
                new MimeType("aps", "application/mime"),
                new MimeType("arc", "application/octet-stream"),
                new MimeType("arj", "application/arj"),
                new MimeType("art", "image/x-jg"),
                new MimeType("asf", "video/x-ms-asf"),
                new MimeType("asm", "text/x-asm"),
                new MimeType("asp", "text/asp"),
                new MimeType("asx", "video/x-ms-asf"),
                new MimeType("au", "audio/basic"),
                new MimeType("avi", "video/avi"),
                new MimeType("avs", "video/avs-video"),
                new MimeType("bcpio", "application/x-bcpio"),
                new MimeType("bin", "application/mac-binary"),
                new MimeType("bm", "image/bmp"),
                new MimeType("bmp", "image/bmp"),
                new MimeType("boo", "application/book"),
                new MimeType("book", "application/book"),
                new MimeType("boz", "application/x-bzip2"),
                new MimeType("bsh", "application/x-bsh"),
                new MimeType("bz", "application/x-bzip"),
                new MimeType("bz2", "application/x-bzip2"),
                new MimeType("c", "text/plain"),
                new MimeType("c++", "text/plain"),
                new MimeType("cat", "application/vnd.ms-pki.seccat"),
                new MimeType("cc", "text/plain"),
                new MimeType("ccad", "application/clariscad"),
                new MimeType("cco", "application/x-cocoa"),
                new MimeType("cdf", "application/cdf"),
                new MimeType("cer", "application/pkix-cert"),
                new MimeType("cha", "application/x-chat"),
                new MimeType("chat", "application/x-chat"),
                new MimeType("class", "application/java-byte-code"),
                new MimeType("com", "text/plain"),
                new MimeType("conf", "text/plain"),
                new MimeType("cpio", "application/x-cpio"),
                new MimeType("cpp", "text/x-c"),
                new MimeType("cpt", "application/mac-compactpro"),
                new MimeType("crl", "application/pkcs-crl"),
                new MimeType("csh", "application/x-csh"),
                new MimeType("css", "text/css"),
                new MimeType("cxx", "text/plain"),
                new MimeType("dcr", "application/x-director"),
                new MimeType("deepv", "application/x-deepv"),
                new MimeType("def", "text/plain"),
                new MimeType("der", "application/x-x509-ca-cert"),
                new MimeType("dif", "video/x-dv"),
                new MimeType("dir", "application/x-director"),
                new MimeType("dl", "video/dl"),
                new MimeType("doc", "application/msword"),
                new MimeType("dot", "application/msword"),
                new MimeType("dp", "application/commonground"),
                new MimeType("drw", "application/drafting"),
                new MimeType("dump", "application/octet-stream"),
                new MimeType("dv", "video/x-dv"),
                new MimeType("dvi", "application/x-dvi"),
                new MimeType("dwf", "drawing/x-dwf"),
                new MimeType("dwg", "image/vnd.dwg"),
                new MimeType("dxf", "image/vnd.dwg"),
                new MimeType("dxr", "application/x-director"),
                new MimeType("el", "text/x-script.elisp"),
                new MimeType("elc", "application/x-elc"),
                new MimeType("env", "application/x-envoy"),
                new MimeType("eps", "application/postscript"),
                new MimeType("es", "application/x-esrehber"),
                new MimeType("etx", "text/x-setext"),
                new MimeType("evy", "application/envoy"),
                new MimeType("exe", "application/octet-stream"),
                new MimeType("f", "text/plain"),
                new MimeType("f77", "text/x-fortran"),
                new MimeType("f90", "text/plain"),
                new MimeType("fdf", "application/vnd.fdf"),
                new MimeType("fif", "image/fif"),
                new MimeType("fli", "video/fli"),
                new MimeType("flo", "image/florian"),
                new MimeType("flx", "text/vnd.fmi.flexstor"),
                new MimeType("fmf", "video/x-atomic3d-feature"),
                new MimeType("for", "text/plain"),
                new MimeType("fpx", "image/vnd.fpx"),
                new MimeType("frl", "application/freeloader"),
                new MimeType("funk", "audio/make"),
                new MimeType("g", "text/plain"),
                new MimeType("g3", "image/g3fax"),
                new MimeType("gif", "image/gif"),
                new MimeType("gl", "video/gl"),
                new MimeType("gsd", "audio/x-gsm"),
                new MimeType("gsm", "audio/x-gsm"),
                new MimeType("gsp", "application/x-gsp"),
                new MimeType("gss", "application/x-gss"),
                new MimeType("gtar", "application/x-gtar"),
                new MimeType("gz", "application/x-gzip"),
                new MimeType("gzip", "application/x-gzip"),
                new MimeType("h", "text/plain"),
                new MimeType("hdf", "application/x-hdf"),
                new MimeType("help", "application/x-helpfile"),
                new MimeType("hgl", "application/vnd.hp-hpgl"),
                new MimeType("hh", "text/plain"),
                new MimeType("hlb", "text/x-script"),
                new MimeType("hlp", "application/hlp"),
                new MimeType("hpg", "application/vnd.hp-hpgl"),
                new MimeType("hpgl", "application/vnd.hp-hpgl"),
                new MimeType("hqx", "application/binhex"),
                new MimeType("hta", "application/hta"),
                new MimeType("htc", "text/x-component"),
                new MimeType("htm", "text/html"),
                new MimeType("html", "text/html"),
                new MimeType("htmls", "text/html"),
                new MimeType("htt", "text/webviewhtml"),
                new MimeType("htx", "text/html"),
                new MimeType("ice", "x-conference/x-cooltalk"),
                new MimeType("ico", "image/x-icon"),
                new MimeType("idc", "text/plain"),
                new MimeType("ief", "image/ief"),
                new MimeType("iefs", "image/ief"),
                new MimeType("iges", "application/iges"),
                new MimeType("igs", "application/iges"),
                new MimeType("ima", "application/x-ima"),
                new MimeType("imap", "application/x-httpd-imap"),
                new MimeType("inf", "application/inf"),
                new MimeType("ins", "application/x-internett-signup"),
                new MimeType("ip", "application/x-ip2"),
                new MimeType("isu", "video/x-isvideo"),
                new MimeType("it", "audio/it"),
                new MimeType("iv", "application/x-inventor"),
                new MimeType("ivr", "i-world/i-vrml"),
                new MimeType("ivy", "application/x-livescreen"),
                new MimeType("jam", "audio/x-jam"),
                new MimeType("jav", "text/plain"),
                new MimeType("java", "text/plain"),
                new MimeType("jcm", "application/x-java-commerce"),
                new MimeType("jfif", "image/jpeg"),
                new MimeType("jfif-tbnl", "image/jpeg"),
                new MimeType("jpe", "image/jpeg"),
                new MimeType("jpeg", "image/jpeg"),
                new MimeType("jpg", "image/jpeg"),
                new MimeType("jps", "image/x-jps"),
                new MimeType("js", "application/x-javascript"),
                new MimeType("jut", "image/jutvision"),
                new MimeType("kar", "audio/midi"),
                new MimeType("ksh", "application/x-ksh"),
                new MimeType("la", "audio/nspaudio"),
                new MimeType("lam", "audio/x-liveaudio"),
                new MimeType("latex", "application/x-latex"),
                new MimeType("lha", "application/lha"),
                new MimeType("lhx", "application/octet-stream"),
                new MimeType("list", "text/plain"),
                new MimeType("lma", "audio/nspaudio"),
                new MimeType("log", "text/plain"),
                new MimeType("lsp", "application/x-lisp"),
                new MimeType("lst", "text/plain"),
                new MimeType("lsx", "text/x-la-asf"),
                new MimeType("ltx", "application/x-latex"),
                new MimeType("lzh", "application/x-lzh"),
                new MimeType("lzx", "application/lzx"),
                new MimeType("m", "text/plain"),
                new MimeType("m1v", "video/mpeg"),
                new MimeType("m2a", "audio/mpeg"),
                new MimeType("m2v", "video/mpeg"),
                new MimeType("m3u", "audio/x-mpequrl"),
                new MimeType("man", "application/x-troff-man"),
                new MimeType("map", "application/x-navimap"),
                new MimeType("mar", "text/plain"),
                new MimeType("mbd", "application/mbedlet"),
                new MimeType("mc$", "application/x-magic-cap-package-1.0"),
                new MimeType("mcd", "application/mcad"),
                new MimeType("mcf", "image/vasa"),
                new MimeType("mcp", "application/netmc"),
                new MimeType("me", "application/x-troff-me"),
                new MimeType("mht", "message/rfc822"),
                new MimeType("mhtml", "message/rfc822"),
                new MimeType("mid", "audio/midi"),
                new MimeType("midi", "audio/midi"),
                new MimeType("mif", "application/x-mif"),
                new MimeType("mime", "message/rfc822"),
                new MimeType("mjf", "audio/x-vnd.audioexplosion.mjuicemediafile"),
                new MimeType("mjpg", "video/x-motion-jpeg"),
                new MimeType("mm", "application/base64"),
                new MimeType("mme", "application/base64"),
                new MimeType("mod", "audio/mod"),
                new MimeType("moov", "video/quicktime"),
                new MimeType("mov", "video/quicktime"),
                new MimeType("movie", "video/x-sgi-movie"),
                new MimeType("mp2", "audio/mpeg"),
                new MimeType("mp3", "audio/mpeg3"),
                new MimeType("mpa", "audio/mpeg"),
                new MimeType("mpc", "application/x-project"),
                new MimeType("mpe", "video/mpeg"),
                new MimeType("mpeg", "video/mpeg"),
                new MimeType("mpg", "video/mpeg"),
                new MimeType("mpga", "audio/mpeg"),
                new MimeType("mpp", "application/vnd.ms-project"),
                new MimeType("mpt", "application/x-project"),
                new MimeType("mpv", "application/x-project"),
                new MimeType("mpx", "application/x-project"),
                new MimeType("mrc", "application/marc"),
                new MimeType("ms", "application/x-troff-ms"),
                new MimeType("mv", "video/x-sgi-movie"),
                new MimeType("my", "audio/make"),
                new MimeType("mzz", "application/x-vnd.audioexplosion.mzz"),
                new MimeType("nap", "image/naplps"),
                new MimeType("naplps", "image/naplps"),
                new MimeType("nc", "application/x-netcdf"),
                new MimeType("ncm", "application/vnd.nokia.configuration-message"),
                new MimeType("nif", "image/x-niff"),
                new MimeType("niff", "image/x-niff"),
                new MimeType("nix", "application/x-mix-transfer"),
                new MimeType("nsc", "application/x-conference"),
                new MimeType("nvd", "application/x-navidoc"),
                new MimeType("o", "application/octet-stream"),
                new MimeType("oda", "application/oda"),
                new MimeType("omc", "application/x-omc"),
                new MimeType("omcd", "application/x-omcdatamaker"),
                new MimeType("omcr", "application/x-omcregerator"),
                new MimeType("p", "text/x-pascal"),
                new MimeType("p10", "application/pkcs10"),
                new MimeType("p12", "application/pkcs-12"),
                new MimeType("p7a", "application/x-pkcs7-signature"),
                new MimeType("p7c", "application/pkcs7-mime"),
                new MimeType("p7m", "application/pkcs7-mime"),
                new MimeType("p7r", "application/x-pkcs7-certreqresp"),
                new MimeType("p7s", "application/pkcs7-signature"),
                new MimeType("part", "application/pro_eng"),
                new MimeType("pas", "text/pascal"),
                new MimeType("pbm", "image/x-portable-bitmap"),
                new MimeType("pcl", "application/vnd.hp-pcl"),
                new MimeType("pct", "image/x-pict"),
                new MimeType("pcx", "image/x-pcx"),
                new MimeType("pdb", "chemical/x-pdb"),
                new MimeType("pdf", "application/pdf"),
                new MimeType("pfunk", "audio/make"),
                new MimeType("pgm", "image/x-portable-greymap"),
                new MimeType("pic", "image/pict"),
                new MimeType("pict", "image/pict"),
                new MimeType("pkg", "application/x-newton-compatible-pkg"),
                new MimeType("pko", "application/vnd.ms-pki.pko"),
                new MimeType("pl", "text/plain"),
                new MimeType("plx", "application/x-pixclscript"),
                new MimeType("pm", "image/x-xpixmap"),
                new MimeType("pm4", "application/x-pagemaker"),
                new MimeType("pm5", "application/x-pagemaker"),
                new MimeType("png", "image/png"),
                new MimeType("pnm", "image/x-portable-anymap"),
                new MimeType("pot", "application/vnd.ms-powerpoint"),
                new MimeType("pov", "model/x-pov"),
                new MimeType("ppa", "application/vnd.ms-powerpoint"),
                new MimeType("ppm", "image/x-portable-pixmap"),
                new MimeType("pps", "application/vnd.ms-powerpoint"),
                new MimeType("ppt", "application/vnd.ms-powerpoint"),
                new MimeType("ppz", "application/mspowerpoint"),
                new MimeType("pre", "application/x-freelance"),
                new MimeType("prt", "application/pro_eng"),
                new MimeType("ps", "application/postscript"),
                new MimeType("psd", "application/octet-stream"),
                new MimeType("pvu", "paleovu/x-pv"),
                new MimeType("pwz", "application/vnd.ms-powerpoint"),
                new MimeType("py", "text/x-script.phyton"),
                new MimeType("pyc", "applicaiton/x-bytecode.python"),
                new MimeType("qcp", "audio/vnd.qcelp"),
                new MimeType("qd3", "x-world/x-3dmf"),
                new MimeType("qd3d", "x-world/x-3dmf"),
                new MimeType("qif", "image/x-quicktime"),
                new MimeType("qt", "video/quicktime"),
                new MimeType("qtc", "video/x-qtc"),
                new MimeType("qti", "image/x-quicktime"),
                new MimeType("qtif", "image/x-quicktime"),
                new MimeType("ra", "audio/x-realaudio"),
                new MimeType("ram", "audio/x-pn-realaudio"),
                new MimeType("ras", "image/cmu-raster"),
                new MimeType("rast", "image/cmu-raster"),
                new MimeType("rexx", "text/x-script.rexx"),
                new MimeType("rf", "image/vnd.rn-realflash"),
                new MimeType("rgb", "image/x-rgb"),
                new MimeType("rm", "audio/x-pn-realaudio"),
                new MimeType("rmi", "audio/mid"),
                new MimeType("rmm", "audio/x-pn-realaudio"),
                new MimeType("rmp", "audio/x-pn-realaudio"),
                new MimeType("rng", "application/ringing-tones"),
                new MimeType("rnx", "application/vnd.rn-realplayer"),
                new MimeType("roff", "application/x-troff"),
                new MimeType("rp", "image/vnd.rn-realpix"),
                new MimeType("rpm", "audio/x-pn-realaudio-plugin"),
                new MimeType("rt", "text/richtext"),
                new MimeType("rtf", "application/rtf"),
                new MimeType("rtx", "text/richtext"),
                new MimeType("rv", "video/vnd.rn-realvideo"),
                new MimeType("s", "text/x-asm"),
                new MimeType("s3m", "audio/s3m"),
                new MimeType("saveme", "application/octet-stream"),
                new MimeType("sbk", "application/x-tbook"),
                new MimeType("scm", "video/x-scm"),
                new MimeType("sdml", "text/plain"),
                new MimeType("sdp", "application/sdp"),
                new MimeType("sdr", "application/sounder"),
                new MimeType("sea", "application/sea"),
                new MimeType("set", "application/set"),
                new MimeType("sgm", "text/sgml"),
                new MimeType("sgml", "text/sgml"),
                new MimeType("sh", "text/x-script.sh"),
                new MimeType("shar", "application/x-shar"),
                new MimeType("shtml", "text/html"),
                new MimeType("sid", "audio/x-psid"),
                new MimeType("sit", "application/x-stuffit"),
                new MimeType("skd", "application/x-koan"),
                new MimeType("skm", "application/x-koan"),
                new MimeType("skp", "application/x-koan"),
                new MimeType("skt", "application/x-koan"),
                new MimeType("sl", "application/x-seelogo"),
                new MimeType("smi", "application/smil"),
                new MimeType("smil", "application/smil"),
                new MimeType("snd", "audio/basic"),
                new MimeType("sol", "application/solids"),
                new MimeType("spc", "text/x-speech"),
                new MimeType("spl", "application/futuresplash"),
                new MimeType("spr", "application/x-sprite"),
                new MimeType("sprite", "application/x-sprite"),
                new MimeType("src", "application/x-wais-source"),
                new MimeType("ssi", "text/x-server-parsed-html"),
                new MimeType("ssm", "application/streamingmedia"),
                new MimeType("sst", "application/vnd.ms-pki.certstore"),
                new MimeType("step", "application/step"),
                new MimeType("stl", "application/vnd.ms-pki.stl"),
                new MimeType("stp", "application/step"),
                new MimeType("sv4cpio", "application/x-sv4cpio"),
                new MimeType("sv4crc", "application/x-sv4crc"),
                new MimeType("svf", "image/vnd.dwg"),
                new MimeType("svr", "application/x-world"),
                new MimeType("swf", "application/x-shockwave-flash"),
                new MimeType("t", "application/x-troff"),
                new MimeType("talk", "text/x-speech"),
                new MimeType("tar", "application/x-tar"),
                new MimeType("tbk", "application/toolbook"),
                new MimeType("tcl", "application/x-tcl"),
                new MimeType("tcsh", "text/x-script.tcsh"),
                new MimeType("tex", "application/x-tex"),
                new MimeType("texi", "application/x-texinfo"),
                new MimeType("texinfo", "application/x-texinfo"),
                new MimeType("text", "application/plain"),
                new MimeType("tgz", "application/gnutar"),
                new MimeType("tif", "image/tiff"),
                new MimeType("tiff", "image/tiff"),
                new MimeType("tr", "application/x-troff"),
                new MimeType("tsi", "audio/tsp-audio"),
                new MimeType("tsp", "application/dsptype"),
                new MimeType("tsv", "text/tab-separated-values"),
                new MimeType("turbot", "image/florian"),
                new MimeType("txt", "text/plain"),
                new MimeType("uil", "text/x-uil"),
                new MimeType("uni", "text/uri-list"),
                new MimeType("unis", "text/uri-list"),
                new MimeType("unv", "application/i-deas"),
                new MimeType("uri", "text/uri-list"),
                new MimeType("uris", "text/uri-list"),
                new MimeType("ustar", "application/x-ustar"),
                new MimeType("uu", "application/octet-stream"),
                new MimeType("uue", "text/x-uuencode"),
                new MimeType("vcd", "application/x-cdlink"),
                new MimeType("vcs", "text/x-vcalendar"),
                new MimeType("vda", "application/vda"),
                new MimeType("vdo", "video/vdo"),
                new MimeType("vew", "application/groupwise"),
                new MimeType("viv", "video/vnd.vivo"),
                new MimeType("vivo", "video/vivo"),
                new MimeType("vmd", "application/vocaltec-media-desc"),
                new MimeType("vmf", "application/vocaltec-media-file"),
                new MimeType("voc", "audio/voc"),
                new MimeType("vos", "video/vosaic"),
                new MimeType("vox", "audio/voxware"),
                new MimeType("vqe", "audio/x-twinvq-plugin"),
                new MimeType("vqf", "audio/x-twinvq"),
                new MimeType("vql", "audio/x-twinvq-plugin"),
                new MimeType("vrml", "application/x-vrml"),
                new MimeType("vrt", "x-world/x-vrt"),
                new MimeType("vsd", "application/x-visio"),
                new MimeType("vst", "application/x-visio"),
                new MimeType("vsw", "application/x-visio"),
                new MimeType("w60", "application/wordperfect6.0"),
                new MimeType("w61", "application/wordperfect6.1"),
                new MimeType("w6w", "application/msword"),
                new MimeType("wav", "audio/wav"),
                new MimeType("wb1", "application/x-qpro"),
                new MimeType("wbmp", "image/vnd.wap.wbmp"),
                new MimeType("web", "application/vnd.xara"),
                new MimeType("wiz", "application/msword"),
                new MimeType("wk1", "application/x-123"),
                new MimeType("wmf", "windows/metafile"),
                new MimeType("wml", "text/vnd.wap.wml"),
                new MimeType("wmlc", "application/vnd.wap.wmlc"),
                new MimeType("wmls", "text/vnd.wap.wmlscript"),
                new MimeType("wmlsc", "application/vnd.wap.wmlscriptc"),
                new MimeType("word", "application/msword"),
                new MimeType("wp", "application/wordperfect"),
                new MimeType("wp5", "application/wordperfect"),
                new MimeType("wp6", "application/wordperfect"),
                new MimeType("wpd", "application/wordperfect"),
                new MimeType("wq1", "application/x-lotus"),
                new MimeType("wri", "application/mswrite"),
                new MimeType("wrl", "application/x-world"),
                new MimeType("wrz", "model/vrml"),
                new MimeType("wsc", "text/scriplet"),
                new MimeType("wsrc", "application/x-wais-source"),
                new MimeType("wtk", "application/x-wintalk"),
                new MimeType("xbm", "image/xbm"),
                new MimeType("xdr", "video/x-amt-demorun"),
                new MimeType("xgz", "xgl/drawing"),
                new MimeType("xif", "image/vnd.xiff"),
                new MimeType("xl", "application/excel"),
                new MimeType("xla", "application/excel"),
                new MimeType("xlb", "application/excel"),
                new MimeType("xlc", "application/excel"),
                new MimeType("xld", "application/excel"),
                new MimeType("xlk", "application/excel"),
                new MimeType("xll", "application/excel"),
                new MimeType("xlm", "application/excel"),
                new MimeType("xls", "application/excel"),
                new MimeType("xlt", "application/excel"),
                new MimeType("xlv", "application/excel"),
                new MimeType("xlw", "application/excel"),
                new MimeType("xm", "audio/xm"),
                new MimeType("xml", "text/xml"),
                new MimeType("xmz", "xgl/movie"),
                new MimeType("xpix", "application/x-vnd.ls-xpix"),
                new MimeType("xpm", "image/xpm"),
                new MimeType("x-png", "image/png"),
                new MimeType("xsr", "video/x-amt-showrun"),
                new MimeType("xwd", "image/x-xwd"),
                new MimeType("xyz", "chemical/x-pdb"),
                new MimeType("z", "application/x-compressed"),
                new MimeType("zip", "application/zip"),
                new MimeType("zoo", "application/octet-stream"),
                new MimeType("zsh", "text/x-script.zsh")
            }).ToDictionary(o => o.Extension, o => o);
            ResponseUtil.DefaultMimeType = ResponseUtil.MimeTypes[string.Empty];
        }

        public static string GetMimeType(string extension)
        {
            if (string.IsNullOrEmpty(extension))
                return null;
            else if (!ResponseUtil.MimeTypes.ContainsKey(extension))
                return ResponseUtil.DefaultMimeType.Type;

            return ResponseUtil.MimeTypes[extension].Type;
        }

        public static string GetMimeType(string extension, string defaultMimeType)
        {
            string mimeType = GetMimeType(extension);

            if (mimeType.IsNullOrEmpty())
                return defaultMimeType;

            return mimeType;
        }

        /// <summary>Sends the specified file.</summary>
        public static void SendDownloadFile(HttpResponse response, string path)
        {
            SendDownloadFile(response, path, GetMimeType(Path.GetExtension(path)));
        }

        /// <summary>Sends the specified file.</summary>
        public static void SendDownloadFile(HttpResponse response, string path, string contentType)
        {
            FileInfo fileInfo = new FileInfo(path);

            BeginSendDownloadFile(response, fileInfo.Name, contentType, fileInfo.Length);

            using (FileStream stream = File.OpenRead(path))
            {
                stream.CopyTo(response.OutputStream);
            }

            EndSendDownloadFile(response);
        }

        /// <summary>Prepares the output stream to send a downloadable file.</summary>
        public static void BeginSendDownloadFile(HttpResponse response, string filename, string contentType)
        {
            if (response.IsClientConnected)
            {
                response.AddHeader("Content-Disposition", "attachment; filename=\"{0}\"".FormatString(filename));
                response.ContentType = contentType;
            }
        }

        /// <summary>Prepares the output stream to send a downloadable file.</summary>
        public static void BeginSendDownloadFile(HttpResponse response, string filename, string contentType, long contentLength)
        {
            if (response.IsClientConnected)
            {
                response.AddHeader("Content-Length", contentLength.ToString());
                BeginSendDownloadFile(response, filename, contentType);
            }
        }

        /// <summary>Flushes and closes the output stream.</summary>
        public static void EndSendDownloadFile(HttpResponse response)
        {
            if (response.IsClientConnected)
                response.Flush();
        }

        private class MimeType
        {
            public string Extension { get; private set; }
            public string Type { get; private set; }

            public MimeType(string extension, string type)
            {
                this.Extension = extension;
                this.Type = type;
            }
        }
    }
}